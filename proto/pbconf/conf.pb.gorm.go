// Code generated by protoc-gen-gorm. DO NOT EDIT.
// versions:
// 	protoc-gen-gorm v2.0.0
// 	protoc        v3.19.3
// source: proto/conf/conf.proto

package pbconf

import (
	context "context"
	pbmodel "github.com/mozyy/empty-news/proto/pbmodel"
	_ "github.com/mozyy/protoc-gen-gorm/options"
	types "github.com/mozyy/protoc-gen-gorm/types"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	time "time"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigGORM struct {
	ID         uint32 `gorm:"primaryKey"`
	Type       string
	Value      string
	Content    string
	Desc       string
	OAuthToken *pbmodel.OAuthTokenGORM
	CreatedAt  *time.Time
	UpdatedAt  *time.Time
	DeletedAt  *types.DeletedAt `gorm:"index"`
}

// TableName overrides the default tablename generated by GORM
func (ConfigGORM) TableName() string {
	return "configs"
}

// ToPB  converts the fields of this object to PB object
func (m *ConfigGORM) ToPB(ctx context.Context) *Config {
	to := Config{}
	to.ID = m.ID
	to.Type = m.Type
	to.Value = m.Value
	to.Content = m.Content
	to.Desc = m.Desc
	to.OAuthToken = m.OAuthToken.ToPB(ctx)
	if m.CreatedAt != nil {
		to.CreatedAt = timestamppb.New(*m.CreatedAt)
	}
	if m.UpdatedAt != nil {
		to.UpdatedAt = timestamppb.New(*m.UpdatedAt)
	}
	to.DeletedAt = m.DeletedAt
	return &to
}

// ToORM  converts the fields of this object to PB object
func (m *Config) ToORM(ctx context.Context) *ConfigGORM {
	to := ConfigGORM{}
	to.ID = m.GetID()
	to.Type = m.GetType()
	to.Value = m.GetValue()
	to.Content = m.GetContent()
	to.Desc = m.GetDesc()
	to.OAuthToken = m.GetOAuthToken().ToORM(ctx)
	if m.GetCreatedAt() != nil {
		CreatedAt := m.GetCreatedAt().AsTime()
		to.CreatedAt = &CreatedAt
	}
	if m.GetUpdatedAt() != nil {
		UpdatedAt := m.GetUpdatedAt().AsTime()
		to.UpdatedAt = &UpdatedAt
	}
	to.DeletedAt = m.GetDeletedAt()
	return &to
}

type DeleteTypeGORM struct {
	ID        uint32 `gorm:"primaryKey"`
	CreatedAt *time.Time
	UpdatedAt *time.Time
	DeletedAt *types.DeletedAt `gorm:"index"`
}

// TableName overrides the default tablename generated by GORM
func (DeleteTypeGORM) TableName() string {
	return "delete_types"
}

// ToPB  converts the fields of this object to PB object
func (m *DeleteTypeGORM) ToPB(ctx context.Context) *DeleteType {
	to := DeleteType{}
	to.ID = m.ID
	if m.CreatedAt != nil {
		to.CreatedAt = timestamppb.New(*m.CreatedAt)
	}
	if m.UpdatedAt != nil {
		to.UpdatedAt = timestamppb.New(*m.UpdatedAt)
	}
	to.DeletedAt = m.DeletedAt
	return &to
}

// ToORM  converts the fields of this object to PB object
func (m *DeleteType) ToORM(ctx context.Context) *DeleteTypeGORM {
	to := DeleteTypeGORM{}
	to.ID = m.GetID()
	if m.GetCreatedAt() != nil {
		CreatedAt := m.GetCreatedAt().AsTime()
		to.CreatedAt = &CreatedAt
	}
	if m.GetUpdatedAt() != nil {
		UpdatedAt := m.GetUpdatedAt().AsTime()
		to.UpdatedAt = &UpdatedAt
	}
	to.DeletedAt = m.GetDeletedAt()
	return &to
}
