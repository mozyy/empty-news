// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: user/oauth/v1/oauth.proto

package oauthv1

import (
	_ "github.com/mozyy/protoc-gen-gorm/options"
	types "github.com/mozyy/protoc-gen-gorm/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// buf:lint:ignore ENUM_VALUE_PREFIX
// buf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE
// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
type ResponseType int32

const (
	ResponseType_code  ResponseType = 0
	ResponseType_token ResponseType = 1
)

// Enum value maps for ResponseType.
var (
	ResponseType_name = map[int32]string{
		0: "code",
		1: "token",
	}
	ResponseType_value = map[string]int32{
		"code":  0,
		"token": 1,
	}
)

func (x ResponseType) Enum() *ResponseType {
	p := new(ResponseType)
	*p = x
	return p
}

func (x ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_oauth_v1_oauth_proto_enumTypes[0].Descriptor()
}

func (ResponseType) Type() protoreflect.EnumType {
	return &file_user_oauth_v1_oauth_proto_enumTypes[0]
}

func (x ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseType.Descriptor instead.
func (ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_user_oauth_v1_oauth_proto_rawDescGZIP(), []int{0}
}

// buf:lint:ignore ENUM_VALUE_PREFIX
// buf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE
// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
type CodeChallengeMethod int32

const (
	CodeChallengeMethod_plain CodeChallengeMethod = 0
	CodeChallengeMethod_S256  CodeChallengeMethod = 1
)

// Enum value maps for CodeChallengeMethod.
var (
	CodeChallengeMethod_name = map[int32]string{
		0: "plain",
		1: "S256",
	}
	CodeChallengeMethod_value = map[string]int32{
		"plain": 0,
		"S256":  1,
	}
)

func (x CodeChallengeMethod) Enum() *CodeChallengeMethod {
	p := new(CodeChallengeMethod)
	*p = x
	return p
}

func (x CodeChallengeMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CodeChallengeMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_user_oauth_v1_oauth_proto_enumTypes[1].Descriptor()
}

func (CodeChallengeMethod) Type() protoreflect.EnumType {
	return &file_user_oauth_v1_oauth_proto_enumTypes[1]
}

func (x CodeChallengeMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CodeChallengeMethod.Descriptor instead.
func (CodeChallengeMethod) EnumDescriptor() ([]byte, []int) {
	return file_user_oauth_v1_oauth_proto_rawDescGZIP(), []int{1}
}

// buf:lint:ignore ENUM_VALUE_PREFIX
// buf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE
// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
// define authorization model
type GrantType int32

const (
	GrantType_authorization_code GrantType = 0
	GrantType_password           GrantType = 1
	GrantType_client_credentials GrantType = 2
	GrantType_refresh_token      GrantType = 3
	GrantType___implicit         GrantType = 4
)

// Enum value maps for GrantType.
var (
	GrantType_name = map[int32]string{
		0: "authorization_code",
		1: "password",
		2: "client_credentials",
		3: "refresh_token",
		4: "__implicit",
	}
	GrantType_value = map[string]int32{
		"authorization_code": 0,
		"password":           1,
		"client_credentials": 2,
		"refresh_token":      3,
		"__implicit":         4,
	}
)

func (x GrantType) Enum() *GrantType {
	p := new(GrantType)
	*p = x
	return p
}

func (x GrantType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GrantType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_oauth_v1_oauth_proto_enumTypes[2].Descriptor()
}

func (GrantType) Type() protoreflect.EnumType {
	return &file_user_oauth_v1_oauth_proto_enumTypes[2]
}

func (x GrantType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GrantType.Descriptor instead.
func (GrantType) EnumDescriptor() ([]byte, []int) {
	return file_user_oauth_v1_oauth_proto_rawDescGZIP(), []int{2}
}

type AuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedirectURI string `protobuf:"bytes,1,opt,name=redirectURI,proto3" json:"redirectURI,omitempty"`
	// 'code'|'token'
	ResponseType  ResponseType `protobuf:"varint,2,opt,name=response_type,json=responseType,proto3,enum=user.oauth.v1.ResponseType" json:"response_type,omitempty"`
	ClientID      string       `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"`
	Scope         string       `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	State         string       `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	CodeChallenge string       `protobuf:"bytes,6,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`
	// 'plain'|'S256'
	CodeChallengeMethod CodeChallengeMethod `protobuf:"varint,7,opt,name=code_challenge_method,json=codeChallengeMethod,proto3,enum=user.oauth.v1.CodeChallengeMethod" json:"code_challenge_method,omitempty"`
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_oauth_v1_oauth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_oauth_v1_oauth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_user_oauth_v1_oauth_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorizeRequest) GetRedirectURI() string {
	if x != nil {
		return x.RedirectURI
	}
	return ""
}

func (x *AuthorizeRequest) GetResponseType() ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return ResponseType_code
}

func (x *AuthorizeRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *AuthorizeRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *AuthorizeRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AuthorizeRequest) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *AuthorizeRequest) GetCodeChallengeMethod() CodeChallengeMethod {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return CodeChallengeMethod_plain
}

type AuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthorizeResponse) Reset() {
	*x = AuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_oauth_v1_oauth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResponse) ProtoMessage() {}

func (x *AuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_oauth_v1_oauth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_user_oauth_v1_oauth_proto_rawDescGZIP(), []int{1}
}

type TokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrantType            GrantType             `protobuf:"varint,1,opt,name=grant_type,json=grantType,proto3,enum=user.oauth.v1.GrantType" json:"grant_type,omitempty"`
	TokenGenerateRequest *TokenGenerateRequest `protobuf:"bytes,2,opt,name=token_generate_request,json=tokenGenerateRequest,proto3" json:"token_generate_request,omitempty"`
	Username             string                `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password             string                `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *TokenRequest) Reset() {
	*x = TokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_oauth_v1_oauth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRequest) ProtoMessage() {}

func (x *TokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_oauth_v1_oauth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRequest.ProtoReflect.Descriptor instead.
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return file_user_oauth_v1_oauth_proto_rawDescGZIP(), []int{2}
}

func (x *TokenRequest) GetGrantType() GrantType {
	if x != nil {
		return x.GrantType
	}
	return GrantType_authorization_code
}

func (x *TokenRequest) GetTokenGenerateRequest() *TokenGenerateRequest {
	if x != nil {
		return x.TokenGenerateRequest
	}
	return nil
}

func (x *TokenRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TokenRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type TokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenInfo *TokenInfo `protobuf:"bytes,1,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
}

func (x *TokenResponse) Reset() {
	*x = TokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_oauth_v1_oauth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenResponse) ProtoMessage() {}

func (x *TokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_oauth_v1_oauth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenResponse.ProtoReflect.Descriptor instead.
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return file_user_oauth_v1_oauth_proto_rawDescGZIP(), []int{3}
}

func (x *TokenResponse) GetTokenInfo() *TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

// TokenInfo implement oauth2.TokenInfo
type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        uint32                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt *types.DeletedAt       `protobuf:"bytes,4,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	// 客户端id
	ClientID string `protobuf:"bytes,5,opt,name=clientID,proto3" json:"clientID,omitempty"`
	// 用户id
	UserID string `protobuf:"bytes,6,opt,name=userID,proto3" json:"userID,omitempty"`
	// 回调地址
	RedirectURI string `protobuf:"bytes,7,opt,name=redirectURI,proto3" json:"redirectURI,omitempty"`
	// 请求权限
	Scope string `protobuf:"bytes,8,opt,name=scope,proto3" json:"scope,omitempty"`
	// code
	Code string `protobuf:"bytes,9,opt,name=code,proto3" json:"code,omitempty"`
	// code 创建时间
	CodeCreateAt        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=code_create_at,json=codeCreateAt,proto3" json:"code_create_at,omitempty"`
	CodeExpiresIn       int64                  `protobuf:"varint,11,opt,name=code_expires_in,json=codeExpiresIn,proto3" json:"code_expires_in,omitempty"`
	CodeChallenge       string                 `protobuf:"bytes,12,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`
	CodeChallengeMethod CodeChallengeMethod    `protobuf:"varint,13,opt,name=code_challenge_method,json=codeChallengeMethod,proto3,enum=user.oauth.v1.CodeChallengeMethod" json:"code_challenge_method,omitempty"`
	// access
	Access          string                 `protobuf:"bytes,14,opt,name=access,proto3" json:"access,omitempty"`
	AccessCreateAt  *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=access_create_at,json=accessCreateAt,proto3" json:"access_create_at,omitempty"`
	AccessExpiresIn int64                  `protobuf:"varint,16,opt,name=access_expires_in,json=accessExpiresIn,proto3" json:"access_expires_in,omitempty"`
	// 刷新
	Refresh          string                 `protobuf:"bytes,17,opt,name=refresh,proto3" json:"refresh,omitempty"`
	RefreshCreateAt  *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=refresh_create_at,json=refreshCreateAt,proto3" json:"refresh_create_at,omitempty"`
	RefreshExpiresIn int64                  `protobuf:"varint,19,opt,name=refresh_expires_in,json=refreshExpiresIn,proto3" json:"refresh_expires_in,omitempty"`
	TokenType        string                 `protobuf:"bytes,20,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_oauth_v1_oauth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_oauth_v1_oauth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_user_oauth_v1_oauth_proto_rawDescGZIP(), []int{4}
}

func (x *TokenInfo) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TokenInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TokenInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TokenInfo) GetDeletedAt() *types.DeletedAt {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *TokenInfo) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *TokenInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *TokenInfo) GetRedirectURI() string {
	if x != nil {
		return x.RedirectURI
	}
	return ""
}

func (x *TokenInfo) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *TokenInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TokenInfo) GetCodeCreateAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CodeCreateAt
	}
	return nil
}

func (x *TokenInfo) GetCodeExpiresIn() int64 {
	if x != nil {
		return x.CodeExpiresIn
	}
	return 0
}

func (x *TokenInfo) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *TokenInfo) GetCodeChallengeMethod() CodeChallengeMethod {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return CodeChallengeMethod_plain
}

func (x *TokenInfo) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *TokenInfo) GetAccessCreateAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AccessCreateAt
	}
	return nil
}

func (x *TokenInfo) GetAccessExpiresIn() int64 {
	if x != nil {
		return x.AccessExpiresIn
	}
	return 0
}

func (x *TokenInfo) GetRefresh() string {
	if x != nil {
		return x.Refresh
	}
	return ""
}

func (x *TokenInfo) GetRefreshCreateAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RefreshCreateAt
	}
	return nil
}

func (x *TokenInfo) GetRefreshExpiresIn() int64 {
	if x != nil {
		return x.RefreshExpiresIn
	}
	return 0
}

func (x *TokenInfo) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

// ClientStore implement oauth2.ClientStore
type ClientStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        uint32                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt *types.DeletedAt       `protobuf:"bytes,4,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Secret    string                 `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	Domain    string                 `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain,omitempty"`
	UserID    string                 `protobuf:"bytes,7,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *ClientStore) Reset() {
	*x = ClientStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_oauth_v1_oauth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStore) ProtoMessage() {}

func (x *ClientStore) ProtoReflect() protoreflect.Message {
	mi := &file_user_oauth_v1_oauth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStore.ProtoReflect.Descriptor instead.
func (*ClientStore) Descriptor() ([]byte, []int) {
	return file_user_oauth_v1_oauth_proto_rawDescGZIP(), []int{5}
}

func (x *ClientStore) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ClientStore) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ClientStore) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ClientStore) GetDeletedAt() *types.DeletedAt {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *ClientStore) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ClientStore) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ClientStore) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type TokenGenerateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID            string              `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	ClientSecret        string              `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	UserID              string              `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	RedirectURI         string              `protobuf:"bytes,4,opt,name=redirectURI,proto3" json:"redirectURI,omitempty"`
	Scope               string              `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Code                string              `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	CodeChallenge       string              `protobuf:"bytes,7,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`
	CodeChallengeMethod CodeChallengeMethod `protobuf:"varint,8,opt,name=code_challenge_method,json=codeChallengeMethod,proto3,enum=user.oauth.v1.CodeChallengeMethod" json:"code_challenge_method,omitempty"`
	Refresh             string              `protobuf:"bytes,9,opt,name=refresh,proto3" json:"refresh,omitempty"`
	CodeVerifier        string              `protobuf:"bytes,10,opt,name=code_verifier,json=codeVerifier,proto3" json:"code_verifier,omitempty"`
	AccessTokenExp      int64               `protobuf:"varint,11,opt,name=access_token_exp,json=accessTokenExp,proto3" json:"access_token_exp,omitempty"`
}

func (x *TokenGenerateRequest) Reset() {
	*x = TokenGenerateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_oauth_v1_oauth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenGenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenGenerateRequest) ProtoMessage() {}

func (x *TokenGenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_oauth_v1_oauth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenGenerateRequest.ProtoReflect.Descriptor instead.
func (*TokenGenerateRequest) Descriptor() ([]byte, []int) {
	return file_user_oauth_v1_oauth_proto_rawDescGZIP(), []int{6}
}

func (x *TokenGenerateRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *TokenGenerateRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *TokenGenerateRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *TokenGenerateRequest) GetRedirectURI() string {
	if x != nil {
		return x.RedirectURI
	}
	return ""
}

func (x *TokenGenerateRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *TokenGenerateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TokenGenerateRequest) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *TokenGenerateRequest) GetCodeChallengeMethod() CodeChallengeMethod {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return CodeChallengeMethod_plain
}

func (x *TokenGenerateRequest) GetRefresh() string {
	if x != nil {
		return x.Refresh
	}
	return ""
}

func (x *TokenGenerateRequest) GetCodeVerifier() string {
	if x != nil {
		return x.CodeVerifier
	}
	return ""
}

func (x *TokenGenerateRequest) GetAccessTokenExp() int64 {
	if x != nil {
		return x.AccessTokenExp
	}
	return 0
}

var File_user_oauth_v1_oauth_proto protoreflect.FileDescriptor

var file_user_oauth_v1_oauth_proto_rawDesc = []byte{
	0x0a, 0x19, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x72,
	0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x02, 0x0a,
	0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x49,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x52, 0x49, 0x12, 0x40, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x13, 0x0a, 0x11,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xda, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x48,
	0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x07, 0x0a, 0x09, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x0d, 0xd2, 0x3f, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x52, 0x02, 0x49, 0x44, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x42, 0x08, 0xd2, 0x3f, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x49, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x49, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x69, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x12, 0x46, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69,
	0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x03, 0xd0, 0x3f, 0x01, 0x22, 0xaa, 0x02,
	0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0d, 0xd2, 0x3f, 0x0a, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x49, 0x44, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x08, 0xd2, 0x3f, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x3a, 0x03, 0xd0, 0x3f, 0x01, 0x22, 0xa3, 0x03, 0x0a, 0x14, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x49, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x49, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12,
	0x56, 0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70,
	0x2a, 0x23, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x10, 0x01, 0x2a, 0x2a, 0x0a, 0x13, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x09, 0x0a, 0x05,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x32, 0x35, 0x36, 0x10,
	0x01, 0x2a, 0x6c, 0x0a, 0x09, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x03, 0x12,
	0x0e, 0x0a, 0x0a, 0x5f, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x10, 0x04, 0x32,
	0x54, 0x0a, 0x0c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x44, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xae, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x7a, 0x79, 0x79, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2d, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x55, 0x4f, 0x58, 0xaa, 0x02, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x5c,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x55, 0x73, 0x65, 0x72, 0x5c,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x3a, 0x3a, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_oauth_v1_oauth_proto_rawDescOnce sync.Once
	file_user_oauth_v1_oauth_proto_rawDescData = file_user_oauth_v1_oauth_proto_rawDesc
)

func file_user_oauth_v1_oauth_proto_rawDescGZIP() []byte {
	file_user_oauth_v1_oauth_proto_rawDescOnce.Do(func() {
		file_user_oauth_v1_oauth_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_oauth_v1_oauth_proto_rawDescData)
	})
	return file_user_oauth_v1_oauth_proto_rawDescData
}

var file_user_oauth_v1_oauth_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_user_oauth_v1_oauth_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_user_oauth_v1_oauth_proto_goTypes = []interface{}{
	(ResponseType)(0),             // 0: user.oauth.v1.ResponseType
	(CodeChallengeMethod)(0),      // 1: user.oauth.v1.CodeChallengeMethod
	(GrantType)(0),                // 2: user.oauth.v1.GrantType
	(*AuthorizeRequest)(nil),      // 3: user.oauth.v1.AuthorizeRequest
	(*AuthorizeResponse)(nil),     // 4: user.oauth.v1.AuthorizeResponse
	(*TokenRequest)(nil),          // 5: user.oauth.v1.TokenRequest
	(*TokenResponse)(nil),         // 6: user.oauth.v1.TokenResponse
	(*TokenInfo)(nil),             // 7: user.oauth.v1.TokenInfo
	(*ClientStore)(nil),           // 8: user.oauth.v1.ClientStore
	(*TokenGenerateRequest)(nil),  // 9: user.oauth.v1.TokenGenerateRequest
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*types.DeletedAt)(nil),       // 11: types.DeletedAt
}
var file_user_oauth_v1_oauth_proto_depIdxs = []int32{
	0,  // 0: user.oauth.v1.AuthorizeRequest.response_type:type_name -> user.oauth.v1.ResponseType
	1,  // 1: user.oauth.v1.AuthorizeRequest.code_challenge_method:type_name -> user.oauth.v1.CodeChallengeMethod
	2,  // 2: user.oauth.v1.TokenRequest.grant_type:type_name -> user.oauth.v1.GrantType
	9,  // 3: user.oauth.v1.TokenRequest.token_generate_request:type_name -> user.oauth.v1.TokenGenerateRequest
	7,  // 4: user.oauth.v1.TokenResponse.token_info:type_name -> user.oauth.v1.TokenInfo
	10, // 5: user.oauth.v1.TokenInfo.created_at:type_name -> google.protobuf.Timestamp
	10, // 6: user.oauth.v1.TokenInfo.updated_at:type_name -> google.protobuf.Timestamp
	11, // 7: user.oauth.v1.TokenInfo.deleted_at:type_name -> types.DeletedAt
	10, // 8: user.oauth.v1.TokenInfo.code_create_at:type_name -> google.protobuf.Timestamp
	1,  // 9: user.oauth.v1.TokenInfo.code_challenge_method:type_name -> user.oauth.v1.CodeChallengeMethod
	10, // 10: user.oauth.v1.TokenInfo.access_create_at:type_name -> google.protobuf.Timestamp
	10, // 11: user.oauth.v1.TokenInfo.refresh_create_at:type_name -> google.protobuf.Timestamp
	10, // 12: user.oauth.v1.ClientStore.created_at:type_name -> google.protobuf.Timestamp
	10, // 13: user.oauth.v1.ClientStore.updated_at:type_name -> google.protobuf.Timestamp
	11, // 14: user.oauth.v1.ClientStore.deleted_at:type_name -> types.DeletedAt
	1,  // 15: user.oauth.v1.TokenGenerateRequest.code_challenge_method:type_name -> user.oauth.v1.CodeChallengeMethod
	5,  // 16: user.oauth.v1.OAuthService.Token:input_type -> user.oauth.v1.TokenRequest
	6,  // 17: user.oauth.v1.OAuthService.Token:output_type -> user.oauth.v1.TokenResponse
	17, // [17:18] is the sub-list for method output_type
	16, // [16:17] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_user_oauth_v1_oauth_proto_init() }
func file_user_oauth_v1_oauth_proto_init() {
	if File_user_oauth_v1_oauth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_oauth_v1_oauth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_oauth_v1_oauth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_oauth_v1_oauth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_oauth_v1_oauth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_oauth_v1_oauth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_oauth_v1_oauth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_oauth_v1_oauth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenGenerateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_oauth_v1_oauth_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_oauth_v1_oauth_proto_goTypes,
		DependencyIndexes: file_user_oauth_v1_oauth_proto_depIdxs,
		EnumInfos:         file_user_oauth_v1_oauth_proto_enumTypes,
		MessageInfos:      file_user_oauth_v1_oauth_proto_msgTypes,
	}.Build()
	File_user_oauth_v1_oauth_proto = out.File
	file_user_oauth_v1_oauth_proto_rawDesc = nil
	file_user_oauth_v1_oauth_proto_goTypes = nil
	file_user_oauth_v1_oauth_proto_depIdxs = nil
}
